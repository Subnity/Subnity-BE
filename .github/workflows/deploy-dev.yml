name: deploy

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch: # 수동 실행이 가능하도록 설정

jobs:
  bulid:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'ci/#4-ci'

    steps:
      - name: 코드 가져오기
        uses: actions/checkout@v4

      - name: 자바 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: Gradle 빌드
        run: ./gradlew clean build -x test
        shell: bash

      - name: 배포 준비
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions_dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Elastic Beanstalk에 배포
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: Subnity
          environment_name: Subnity-env
          version_label: github-action-${{ github.sha }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          use_existing_version_if_available: false # 기존 버전 사용 설정
          wait_for_environment_recovery: 500
          wait_for_deployment: false